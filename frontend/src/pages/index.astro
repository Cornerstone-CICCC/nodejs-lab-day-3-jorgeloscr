---

import { useState } from 'react';


const [username, setUsername] = useState('');
const [message, setMessage] = useState('');
const [messages, setMessages] = useState([]);
const [selectedRoom, setSelectedRoom] = useState('room1');

const socket = io('http://localhost:3000');

const handleSubmit = (event) => {
  event.preventDefault();

  if (username && message) {
    socket.emit('sendMessage', { username, message, room: selectedRoom });
    setMessage('');
  }
};

const handleRoomChange = (room) => {
  setSelectedRoom(room);
  socket.emit('joinRoom', { room });
  setMessages([]);
};

socket.on('newMessage', (data) => {
  setMessages((prevMessages) => [...prevMessages, data]);
});


socket.on('roomMessages', (data) => {
  setMessages(data);
});

---

<html>
  <head>
    <title>Chat Application</title>
    <script src="https://cdn.socket.io/4.4.0/socket.io.min.js"></script>
  </head>
  <body>
    <h1>Chat Room</h1>

    <label for="username">Username:</label>
    <input
      type="text"
      id="username"
      value={username}
      onInput={(e) => setUsername(e.target.value)}
      placeholder="Enter username"
    />

    <label for="message">Message:</label>
    <input
      type="text"
      id="message"
      value={message}
      onInput={(e) => setMessage(e.target.value)}
      placeholder="Enter message"
    />

   
    <button onClick={handleSubmit}>Send</button>

    <div>
      <h3>Choose Room:</h3>
      <button onClick={() => handleRoomChange('room1')}>Room 1</button>
      <button onClick={() => handleRoomChange('room2')}>Room 2</button>
      <button onClick={() => handleRoomChange('room3')}>Room 3</button>
    </div>


    <ul>
      {messages.map((msg, index) => (
        <li key={index}>
          <strong>{msg.username}:</strong> {msg.message}
        </li>
      ))}
    </ul>
  </body>
</html>
